class Solution {
public:
    int divide(int a, int b) {
    // 32 位最大值：2^31 - 1 = 2147483647
    // 32 位最小值：-2^31 = -2147483648
    // -2147483648 / (-1) = 2147483648 > 2147483647 越界了

        if (a == INT_MIN && b == -1)
            return INT_MAX;

        if (a == INT_MIN && b == 1)
            return INT_MIN;

        if(a == 0) return 0;

        int flag = 0;
        int res = 0;
        
        if((a > 0) ^ ( b > 0)) flag = -1;
        //防止越界
        unsigned int ua = abs(a);
        unsigned int ub = abs(b);
//        cout << ua <<" / " << ub << endl;
/*
        for(int i = 31; i > -1; --i){
            cout << "before -- "<< "i:" << i << " , ua: "<< ua << " , ub: "<< ub << endl;
            if((ua >> i) >= ub ){
                ua = ua- (ub<<i);
            cout << "in if after   -- " << "i:" << i << " , ua: "<< ua << " , ub: "<< ub << endl;
                res = res + (1<<i);
            }
        }
*/
        int i = 31;
        while(ua >= ub){
            if((ua >> i) >= ub){
                ua = ua - (ub<<i);
                res = res + (1<<i);
            }
            i--;
        }

        if(flag == -1) res = -res;
        return res;
    }
};
